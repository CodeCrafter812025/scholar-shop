<!doctype html>
<html lang="fa" dir="rtl">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>فروشگاه — محصولات</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">

  <nav class="navbar navbar-expand-lg navbar-white bg-white border-bottom">
    <div class="container">
      <a class="navbar-brand fw-bold" href="#">ScholarShop</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="mainNav">
        <form class="d-flex ms-auto my-2 my-lg-0" id="searchForm">
          <input id="q" class="form-control me-2" type="search" placeholder="جستجو..." aria-label="Search">
          <button class="btn btn-outline-secondary" type="submit">جستجو</button>
        </form>
        <ul class="navbar-nav mb-2 mb-lg-0 ms-3">
          <li class="nav-item"><a class="nav-link" href="/cart.html">سبد (<span id="cartCount">0</span>)</a></li>
          <li class="nav-item"><a class="nav-link" href="/login.html">ورود</a></li>
        </ul>
      </div>
    </div>
  </nav>

  <main class="container my-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
      <h4>محصولات</h4>
      <div style="min-width:200px;">
        <select id="sort" class="form-select form-select-sm">
          <option value="">مرتب‌سازی</option>
          <option value="price_asc">قیمت ↑</option>
          <option value="price_desc">قیمت ↓</option>
        </select>
      </div>
    </div>

    <div id="productsRow" class="row g-3"></div>

    <nav class="mt-4">
      <ul id="pagination" class="pagination justify-content-center"></ul>
    </nav>
  </main>

  <script>
    // ← اینجا آدرس API بک‌اندت را قرار بده

    // اگر بک‌اند تصویر ارسال نمی‌کند، اینجا مپ id -> url را بگذار
  const staticImageMap = {
    1: 'https://example.com/image1.jpg',
    2: 'https://example.com/image2.png',
    // ... ادامه
  };


    const API_URL = '/api/product/search';

    const productsRow = document.getElementById('productsRow');
    const cartCountEl = document.getElementById('cartCount');
    const paginationEl = document.getElementById('pagination');

    function getCart(){ return JSON.parse(localStorage.getItem('cart')||'[]'); }
    function saveCart(c){ localStorage.setItem('cart', JSON.stringify(c)); updateCartUI(); }
    function addToCart(product){
      const cart = getCart();
      const found = cart.find(p=>p.id===product.id);
      if(found) found.qty++;
      else cart.push({...product, qty:1});
      saveCart(cart);
      showToast('به سبد اضافه شد');
    }
    function updateCartUI(){ cartCountEl.textContent = getCart().reduce((s,p)=>s+p.qty,0); }
    updateCartUI();

async function loadProducts(page=1, q='', sort=''){
  productsRow.innerHTML = '<div class="text-center py-5">در حال بارگذاری...</div>';
  try{
    // front-end uses 1-based pages; API expects 0-based
    const apiPage = Math.max(0, page - 1);
    const url = `${API_URL}?page=${apiPage}&size=12&q=${encodeURIComponent(q)}&sort=${encodeURIComponent(sort)}`;
    const res = await fetch(url, { credentials: 'include' });
    if(!res.ok){
      const text = await res.text().catch(()=>'');
      throw new Error(`HTTP ${res.status} ${res.statusText} ${text ? '- ' + text.slice(0,200) : ''}`);
    }
    const json = await res.json().catch(()=>null);
    // APIResponse wrapper -> data contains the Page object
    const pageData = json?.data || json;
    const items = pageData?.content || (Array.isArray(pageData) ? pageData : []);
    renderProducts(items);
    const currentOneBased = (pageData?.number != null) ? (pageData.number + 1) : page;
    const totalPages = pageData?.totalPages || 1;
    renderPagination(currentOneBased, totalPages);
  }catch(err){
    productsRow.innerHTML = `<div class="alert alert-danger">خطا در دریافت داده‌ها: ${err.message}</div>`;
    console.error('loadProducts error:', err);
  }
}
loadProducts(1);


    function renderProducts(items){
      if(!items || items.length===0){
        productsRow.innerHTML = '<div class="col-12">محصولی یافت نشد.</div>';
        return;
      }
      productsRow.innerHTML = items.map(p => `
        <div class="col-6 col-md-4 col-lg-3">
          <div class="card h-100">
            <img src="${p.image || 'assets/placeholder.png'}" class="card-img-top" alt="${p.name}">
            <div class="card-body d-flex flex-column">
              <h6 class="card-title mb-1">${p.name}</h6>
              <p class="mb-2 small text-muted">${p.shortDesc || ''}</p>
              <div class="mt-auto d-flex justify-content-between align-items-center">
                <strong>${p.price ? p.price + ' تومان' : '—'}</strong>
                <button class="btn btn-sm btn-primary" onclick='addToCart(${JSON.stringify(p)})'>افزودن</button>
              </div>
            </div>
          </div>
        </div>
      `).join('');
    }

    function renderPagination(page, total){
      let html = '';
      for(let i=1;i<=total;i++){
        html += `<li class="page-item ${i===page?'active':''}"><a class="page-link" href="#" onclick="event.preventDefault(); loadProducts(${i}, document.getElementById('q').value, document.getElementById('sort').value)">${i}</a></li>`;
      }
      paginationEl.innerHTML = html;
    }

    function showToast(msg){
      const t = document.createElement('div');
      t.className = 'toast align-items-center text-bg-success border-0 position-fixed end-0 bottom-0 m-3';
      t.role = 'alert';
      t.innerHTML = `<div class="d-flex"><div class="toast-body">${msg}</div><button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button></div>`;
      document.body.appendChild(t);
      const bs = new bootstrap.Toast(t);
      bs.show();
      t.addEventListener('hidden.bs.toast', ()=> t.remove());
    }

    document.getElementById('searchForm').addEventListener('submit', e=>{
      e.preventDefault();
      loadProducts(1, document.getElementById('q').value.trim(), document.getElementById('sort').value);
    });
    document.getElementById('sort').addEventListener('change', ()=>{
      loadProducts(1, document.getElementById('q').value.trim(), document.getElementById('sort').value);
    });

    // بارگذاری اولیه
    loadProducts(1);
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

